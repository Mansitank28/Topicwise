/*Complete the Singleton class in your editor which contains the following components:

A private Singleton non parameterized constructor.
A public String instance variable named str .
Write a static method named getSingleInstance that returns the single instance of the Singleton class.*/ 

//eager initialization
class Singleton{

    private static final Singleton instance = new Singleton();
    public String str = new String();
    private Singleton (){
    }
    public static Singleton getSingleInstance(){
            return instance;
    }
}

//Static block initialization
class Singleton{
  private static Singleton instance;
   private Singleton (){
    }
static {
        try {
            instance = new Singleton();
        } catch (Exception e) {
            throw new RuntimeException("Exception occurred in creating singleton instance");
        }
    }
public static Singleton getInstance() {
        return instance;
    }
}
 //Lazy Initialization
class Singleton{
  private static Singleton instance;
  private Singleton (){
    }
public static Singleton getInstance() {
    if(instance == null){
        instance = new Singleton();
    }
    return instance;        
  }
}

//Thread Safe Singleton
class Singleton{
  private static Singleton instance;
  private Singleton (){
    }
public static synchronized Singleton getInstance() {
    if(instance == null){
        instance = new Singleton();
    }
    return instance;        
  }
}



